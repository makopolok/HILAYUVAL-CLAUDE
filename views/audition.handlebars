{{! views/audition.handlebars }}
{{!-- audition.handlebars: Project-specific or generic audition submission form --}}
{{> header}}
<div class="container mt-5">
  <h1 class="display-4 mb-4">
    {{!-- Show project name if present, otherwise generic heading --}}
    {{#if project}}
      Submit Audition for <span class="text-primary">{{project.name}}</span>
    {{else}}
      Submit Your Audition
    {{/if}}
  </h1>
  {{!-- Form action is dynamic: /audition/:projectId for project-specific, /audition for generic --}}
  <form id="audition-form" action="{{#if project}}/audition/{{project.id}}{{else}}/audition{{/if}}" method="POST" enctype="multipart/form-data" class="needs-validation" novalidate data-upload-method="{{upload_method}}" data-bunny-library-id="{{bunny_stream_library_id}}">
    <div class="row">
      <div class="col-md-6 mb-3">
        <label for="first_name_he" class="form-label">שם פרטי (First Name, Hebrew)</label>
        <input type="text" class="form-control" id="first_name_he" name="first_name_he" dir="rtl" required>
        <div class="invalid-feedback">נא להזין שם פרטי בעברית.</div>
      </div>
      <div class="col-md-6 mb-3">
        <label for="last_name_he" class="form-label">שם משפחה (Last Name, Hebrew)</label>
        <input type="text" class="form-control" id="last_name_he" name="last_name_he" dir="rtl" required>
        <div class="invalid-feedback">נא להזין שם משפחה בעברית.</div>
      </div>
    </div>
    <div class="row">
      <div class="col-md-6 mb-3">
        <label for="first_name_en" class="form-label">First Name (English)</label>
        <input type="text" class="form-control" id="first_name_en" name="first_name_en" required>
        <div class="invalid-feedback">Please enter your first name in English.</div>
      </div>
      <div class="col-md-6 mb-3">
        <label for="last_name_en" class="form-label">Last Name (English)</label>
        <input type="text" class="form-control" id="last_name_en" name="last_name_en" required>
        <div class="invalid-feedback">Please enter your last name in English.</div>
      </div>
    </div>
    <div class="mb-3">
      <label for="phone" class="form-label">Phone Number</label>
      <input type="tel" class="form-control" id="phone" name="phone" pattern="[0-9\-+() ]{7,}" required>
      <div class="invalid-feedback">Please enter a valid phone number.</div>
    </div>
    <div class="mb-3">
      <label for="email" class="form-label">Email</label>
      <input type="email" class="form-control" id="email" name="email" required>
      <div class="invalid-feedback">Please enter a valid email address.</div>
    </div>
    <div class="mb-3">
      <label for="agency" class="form-label">Agency</label>
      <input type="text" class="form-control" id="agency" name="agency">
    </div>
    <div class="mb-3">
      <label for="age" class="form-label">Age (optional)</label>
      <input type="number" class="form-control" id="age" name="age" min="1" max="120">
    </div>
    <div class="mb-3">
      <label for="height" class="form-label">Height (cm, optional)</label>
      <input type="number" class="form-control" id="height" name="height" min="50" max="250">
    </div>
    {{#if project}}
    <div class="mb-3">
      <label for="role" class="form-label">Role</label>
      <select class="form-select" id="role" name="role" required>
        <option value="" selected disabled>Select a role</option>
        {{#each project.roles}}
          <option value="{{this.name}}">{{this.name}}</option>
        {{/each}}
      </select>
      <div class="invalid-feedback">Please select a role.</div>
    </div>
    {{else}}
    <div class="mb-3">
      <label for="role" class="form-label">Role (optional)</label>
      <input type="text" class="form-control" id="role" name="role">
    </div>
    {{/if}}    <div class="mb-3">
      <label for="profile_pictures" class="form-label">Profile Picture(s) <span class="text-muted">(optional)</span></label>
      <input type="file" class="form-control" id="profile_pictures" name="profile_pictures" accept="image/*" multiple>
      <div class="invalid-feedback">If you wish, you may upload a profile picture.</div>
      <div class="form-text text-muted">
        <i class="fas fa-info-circle me-1"></i>
        Maximum 10 files, 500MB each. Supported: JPG, PNG, WebP, GIF
      </div>
      <!-- Profile pictures preview -->
      <div id="profile-pictures-preview" class="mt-2 d-none">
        <div class="row g-2" id="profile-pictures-list"></div>
      </div>
    </div>    {{#if project}}
      {{#if (eq project.uploadMethod "youtube")}}
        <div class="mb-3">
          <label for="video" class="form-label">Self-Tape Video <span class="text-muted">(optional)</span> (YouTube Upload)</label>
          <input type="file" class="form-control" id="video" name="video" accept="video/*">
          <div class="invalid-feedback">If you wish, you may upload a video file.</div>
          <div class="form-text text-muted">
            <i class="fas fa-info-circle me-1"></i>
            Maximum 500MB. Supported: MP4, AVI, MOV, WMV, FLV, WebM, MKV
          </div>
          <!-- Video preview and validation -->
          <div id="video-preview" class="mt-2 d-none">
            <div class="card border-success">
              <div class="card-body p-3">
                <div class="d-flex align-items-center">
                  <div class="me-3">
                    <i class="fas fa-video text-success fa-2x"></i>
                  </div>
                  <div class="flex-grow-1">
                    <h6 class="mb-1" id="video-name"></h6>
                    <div class="small text-muted">
                      <span id="video-size"></span> • <span id="video-type"></span>
                    </div>
                    <div class="progress mt-2" style="height: 4px;" id="video-validation-progress">
                      <div class="progress-bar bg-success" role="progressbar" style="width: 100%"></div>
                    </div>
                  </div>
                  <button type="button" class="btn btn-sm btn-outline-danger" onclick="clearVideoSelection()">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
                <div class="mt-3 d-none" id="direct-upload-ui">
                  <div class="d-flex align-items-center mb-2">
                    <i class="fas fa-cloud-arrow-up me-2 text-success"></i>
                    <strong>Direct upload to Bunny.net</strong>
                  </div>
                  <progress id="upload-progress" max="100" value="0" style="width:100%;"></progress>
                  <div class="small text-muted mt-1">Progress: <span id="upload-progress-text">0%</span></div>
                  <div class="mt-2 d-flex gap-2">
                    <button type="button" id="btn-upload-pause" class="btn btn-sm btn-outline-secondary">Pause</button>
                    <button type="button" id="btn-upload-resume" class="btn btn-sm btn-outline-secondary" disabled>Resume</button>
                    <button type="button" id="btn-upload-cancel" class="btn btn-sm btn-outline-danger">Cancel</button>
                  </div>
                  <div id="upload-error" class="alert alert-danger d-none mt-2" role="alert"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      {{else}}
        <div class="mb-3">
          <label for="video" class="form-label">Self-Tape Video <span class="text-muted">(optional)</span> (Private Upload)</label>
          <input type="file" class="form-control" id="video" name="video" accept="video/*">
          <div class="invalid-feedback">If you wish, you may upload a video file.</div>
          <div class="form-text text-muted">
            <i class="fas fa-info-circle me-1"></i>
            Maximum 500MB. Supported: MP4, AVI, MOV, WMV, FLV, WebM, MKV
          </div>
          <!-- Video preview and validation -->
          <div id="video-preview" class="mt-2 d-none">
            <div class="card border-success">
              <div class="card-body p-3">
                <div class="d-flex align-items-center">
                  <div class="me-3">
                    <i class="fas fa-video text-success fa-2x"></i>
                  </div>
                  <div class="flex-grow-1">
                    <h6 class="mb-1" id="video-name"></h6>
                    <div class="small text-muted">
                      <span id="video-size"></span> • <span id="video-type"></span>
                    </div>
                    <div class="progress mt-2" style="height: 4px;" id="video-validation-progress">
                      <div class="progress-bar bg-success" role="progressbar" style="width: 100%"></div>
                    </div>
                  </div>
                  <button type="button" class="btn btn-sm btn-outline-danger" onclick="clearVideoSelection()">
                    <i class="fas fa-times"></i>
                  </button>
                </div>
                <div class="mt-3 d-none" id="direct-upload-ui">
                  <div class="d-flex align-items-center mb-2">
                    <i class="fas fa-cloud-arrow-up me-2 text-success"></i>
                    <strong>Direct upload to Bunny.net</strong>
                  </div>
                  <progress id="upload-progress" max="100" value="0" style="width:100%;"></progress>
                  <div class="small text-muted mt-1">Progress: <span id="upload-progress-text">0%</span></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      {{/if}}    {{else}}
    <div class="mb-3">
      <label for="video" class="form-label">Self-Tape Video <span class="text-muted">(optional)</span></label>
      <input type="file" class="form-control" id="video" name="video" accept="video/*">
      <div class="invalid-feedback">If you wish, you may upload a video file.</div>
      <div class="form-text text-muted">
        <i class="fas fa-info-circle me-1"></i>
        Maximum 500MB. Supported: MP4, AVI, MOV, WMV, FLV, WebM, MKV
      </div>
      <!-- Video preview and validation -->
      <div id="video-preview" class="mt-2 d-none">
        <div class="card border-success">
          <div class="card-body p-3">
            <div class="d-flex align-items-center">
              <div class="me-3">
                <i class="fas fa-video text-success fa-2x"></i>
              </div>
              <div class="flex-grow-1">
                <h6 class="mb-1" id="video-name"></h6>
                <div class="small text-muted">
                  <span id="video-size"></span> • <span id="video-type"></span>
                </div>
                <div class="progress mt-2" style="height: 4px;" id="video-validation-progress">
                  <div class="progress-bar bg-success" role="progressbar" style="width: 100%"></div>
                </div>
              </div>
              <button type="button" class="btn btn-sm btn-outline-danger" onclick="clearVideoSelection()">
                <i class="fas fa-times"></i>
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    {{/if}}
    <div class="mb-3">
      <label for="showreel_url" class="form-label">Showreel Link (optional)</label>
      <input type="url" class="form-control" id="showreel_url" name="showreel_url" placeholder="https://...">
    </div>    <button type="submit" class="btn btn-primary" id="submit-btn">
      <span id="submit-text">Submit Audition</span>
      <span id="submit-spinner" class="d-none">
        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
        Uploading...
      </span>
    </button>
  </form>
</div>

<!-- Loading Overlay -->
<div id="loading-overlay" class="d-none position-fixed top-0 start-0 w-100 h-100" style="background-color: rgba(0,0,0,0.8); z-index: 9999;">
  <div class="d-flex justify-content-center align-items-center h-100">
    <div class="text-center text-white">
      <div class="spinner-border mb-3" role="status" style="color: var(--primary-red); width: 4rem; height: 4rem; border-width: 0.3em;">
        <span class="visually-hidden">Loading...</span>
      </div>
      <h4 style="color: var(--primary-red);">
        <i class="fas fa-cloud-upload-alt me-2"></i>
        Uploading Your Audition...
      </h4>
      <p class="text-light">Please don't close this tab. Large video files may take several minutes to upload securely to our servers.</p>
      
      <!-- Enhanced progress information -->
      <div class="mt-4">
            <div id="resume-upload-hint" class="alert alert-warning d-none mt-3">
              Looks like a previous upload was interrupted: <strong data-name></strong> (<span data-size></span>). If you reselect the same file, the upload can resume.
            </div>
            <div id="resume-upload-hint" class="alert alert-warning d-none mt-3">
              Looks like a previous upload was interrupted: <strong data-name></strong> (<span data-size></span>). If you reselect the same file, the upload can resume.
            </div>
        <div class="card bg-dark border-secondary" style="max-width: 400px; margin: 0 auto;">
          <div class="card-body p-3">
            <h6 class="text-white mb-3">
              <i class="fas fa-shield-alt me-2" style="color: var(--primary-red);"></i>
              Secure Bunny.net Upload
            </h6>
            <div class="text-start">
              <div class="d-flex justify-content-between mb-2">
                <span class="small text-muted">Upload Method:</span>
                <span class="small text-white">Private & Secure (Bunny.net)</span>
              </div>
              <div class="d-flex justify-content-between mb-2">
                <span class="small text-muted">Processing:</span>
                <span class="small text-white">Real-time</span>
              </div>
              <div class="d-flex justify-content-between">
                <span class="small text-muted">Accessibility:</span>
                <span class="small text-white">Casting Directors Only</span>
              </div>
            </div>
          </div>
        </div>
      </div>
      
      <div class="progress mx-auto mt-3" style="width: 300px; height: 8px;">
        <div class="progress-bar progress-bar-striped progress-bar-animated" id="overlay-upload-progress-bar" role="progressbar" style="background-color: var(--primary-red); width: 0%"></div>
      </div>
      <div class="text-center mt-2">
        <small class="text-light fw-bold" style="letter-spacing:0.3px">Upload Progress: <span id="overlay-upload-progress-text">0%</span></small>
      </div>
      
      <!-- Tips for large uploads -->
      <div class="mt-3">
        <small class="text-muted">
          <i class="fas fa-lightbulb me-1"></i>
          Tip: For best results, ensure stable internet connection during upload
        </small>
      </div>
    </div>
  </div>
</div>

{{> footer}}

<!-- Make sure axios is available for the secure uploader -->
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>

<!-- Load the secure uploader script -->
<script src="/js/secure-upload.js"></script>

<script>
// File size constants (matching backend limits)
const MAX_FILE_SIZE = 500 * 1024 * 1024; // 500MB
const MAX_PROFILE_PICTURES = 10;

// Supported file types
const VIDEO_TYPES = [
  'video/mp4', 'video/avi', 'video/mov', 'video/wmv', 
  'video/flv', 'video/webm', 'video/mkv', 'video/quicktime'
];
const IMAGE_TYPES = [
  'image/jpeg', 'image/png', 'image/gif', 'image/webp', 'image/jpg'
];

// Utility functions
function formatFileSize(bytes) {
  if (bytes === 0) return '0 Bytes';
  const k = 1024;
  const sizes = ['Bytes', 'KB', 'MB', 'GB'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

function validateFileSize(file) {
  return file.size <= MAX_FILE_SIZE;
}

function validateVideoType(file) {
  return VIDEO_TYPES.includes(file.type);
}

function validateImageType(file) {
  return IMAGE_TYPES.includes(file.type);
}

// Profile pictures handling
function handleProfilePicturesSelection(event) {
  const files = Array.from(event.target.files);
  const preview = document.getElementById('profile-pictures-preview');
  const list = document.getElementById('profile-pictures-list');
  
  if (!files.length) {
    preview.classList.add('d-none');
    return;
  }

  // Validate file count
  if (files.length > MAX_PROFILE_PICTURES) {
    showFileError('profile_pictures', `Too many files selected. Maximum ${MAX_PROFILE_PICTURES} profile pictures allowed.`);
    event.target.value = '';
    preview.classList.add('d-none');
    return;
  }

  // Validate each file
  let hasErrors = false;
  const validFiles = [];

  files.forEach((file, index) => {
    if (!validateImageType(file)) {
      showFileError('profile_pictures', `File "${file.name}" is not a valid image type.`);
      hasErrors = true;
      return;
    }

    if (!validateFileSize(file)) {
      showFileError('profile_pictures', `File "${file.name}" is too large (${formatFileSize(file.size)}). Maximum size is 500MB.`);
      hasErrors = true;
      return;
    }

    validFiles.push(file);
  });

  if (hasErrors) {
    event.target.value = '';
    preview.classList.add('d-none');
    return;
  }

  // Show preview
  list.innerHTML = '';
  validFiles.forEach((file, index) => {
    const col = document.createElement('div');
    col.className = 'col-6 col-md-4 col-lg-3';
    
    col.innerHTML = `
      <div class="card border-success">
        <div class="card-body p-2">
          <div class="d-flex align-items-center">
            <i class="fas fa-image text-success me-2"></i>
            <div class="flex-grow-1">
              <div class="small fw-bold text-truncate">${file.name}</div>
              <div class="small text-muted">${formatFileSize(file.size)}</div>
            </div>
          </div>
        </div>
      </div>
    `;
    
    list.appendChild(col);
  });
  
  preview.classList.remove('d-none');
  clearFileError('profile_pictures');
}

// Error handling
function showFileError(fieldName, message) {
  const field = document.getElementById(fieldName);
  const existingError = field.parentNode.querySelector('.file-error');
  
  if (existingError) {
    existingError.remove();
  }
  
  const errorDiv = document.createElement('div');
  errorDiv.className = 'file-error alert alert-danger mt-2 p-2';
  errorDiv.innerHTML = `<i class="fas fa-exclamation-triangle me-1"></i> ${message}`;
  
  field.parentNode.appendChild(errorDiv);
  field.classList.add('is-invalid');
}

function clearFileError(fieldName) {
  const field = document.getElementById(fieldName);
  const existingError = field.parentNode.querySelector('.file-error');
  
  if (existingError) {
    existingError.remove();
  }
  
  field.classList.remove('is-invalid');
}

// Clear video selection
function clearVideoSelection() {
  document.getElementById('video').value = '';
  document.getElementById('video-preview').classList.add('d-none');
  document.getElementById('video_url').value = ''; // Clear the hidden input for video URL
  clearFileError('video');
}

// Initialize secure uploader
function initializeSecureUploader() {
  // Add a hidden input for the video URL
  const form = document.getElementById('audition-form');
  const videoUrlInput = document.createElement('input');
  videoUrlInput.type = 'hidden';
  videoUrlInput.id = 'video_url';
  videoUrlInput.name = 'video_url';
  form.appendChild(videoUrlInput);
  
  // Create the secure uploader instance
  const uploader = initSecureUploader({
    fileInputId: 'video',
    progressElementId: 'upload-progress',
    statusElementId: 'upload-progress-text',
    videoIdInputId: 'video_url',
    formId: 'audition-form',
    submitButtonId: 'submit-btn',
    titlePrefix: 'Audition'
  });
  
  // Update the loading overlay progress when upload progress changes
  uploader.options.onProgress = (percent) => {
    document.getElementById('overlay-upload-progress-bar').style.width = `${percent}%`;
    document.getElementById('overlay-upload-progress-text').textContent = `${percent}%`;
    document.getElementById('upload-progress-text').textContent = `${percent}%`;
    document.getElementById('upload-progress').value = percent;
    
    // Show the direct upload UI when upload starts
    if (percent > 0) {
      document.getElementById('direct-upload-ui').classList.remove('d-none');
    }
  };
}

// Enhanced form submission with upload progress
function enhanceFormSubmission() {
  const form = document.querySelector('.needs-validation');
  
  form.addEventListener('submit', function(event) {
    console.log('Form submit event triggered with video_url:', document.getElementById('video_url').value);
    
    // Only run this validation if we're not already handling video upload via the secure uploader
    if (!document.getElementById('video_url').value) {
      // Run original validation first
      if (!form.checkValidity()) {
        event.preventDefault();
        event.stopPropagation();
        form.classList.add('was-validated');
        return;
      }

      // Check for file validation errors
      const fileErrors = form.querySelectorAll('.file-error');
      if (fileErrors.length > 0) {
        event.preventDefault();
        event.stopPropagation();
        return;
      }

      // Only show loading overlay for form submission with profile pictures
      // (video is handled by secure uploader)
      const profileFiles = document.getElementById('profile_pictures').files;
      
      let totalSize = 0;
      if (profileFiles) {
        Array.from(profileFiles).forEach(file => totalSize += file.size);
      }

      // Update loading message based on file sizes
      if (totalSize > 0) {
        if (totalSize > 100 * 1024 * 1024) { // > 100MB
          updateLoadingMessage('Large files detected. This may take several minutes...', totalSize);
        } else if (totalSize > 10 * 1024 * 1024) { // > 10MB
          updateLoadingMessage('Uploading files. Please wait...', totalSize);
        }

        // Show loading overlay
        document.getElementById('loading-overlay').classList.remove('d-none');
      }
      
      document.getElementById('submit-text').classList.add('d-none');
      document.getElementById('submit-spinner').classList.remove('d-none');
      document.getElementById('submit-btn').disabled = true;

      // Prevent multiple submissions
      form.querySelector('button[type="submit"]').style.pointerEvents = 'none';
    }
  });
}

function updateLoadingMessage(message, totalSize) {
  const loadingText = document.querySelector('#loading-overlay p');
  if (loadingText) {
    loadingText.innerHTML = `${message}<br><small>Total upload size: ${formatFileSize(totalSize)}</small>`;
  }
}

// Initialize when DOM is ready
document.addEventListener('DOMContentLoaded', function() {
  // Initialize the secure uploader
  initializeSecureUploader();
  
  // Attach profile pictures handler
  const profileInput = document.getElementById('profile_pictures');
  if (profileInput) {
    profileInput.addEventListener('change', handleProfilePicturesSelection);
  }

  // Enhance form submission
  enhanceFormSubmission();

  // Bootstrap validation for client-side feedback
  (function () {
    'use strict';
    var forms = document.querySelectorAll('.needs-validation');
    Array.prototype.slice.call(forms).forEach(function (form) {
      form.classList.add('was-validated');
    });
  })();
});

// Make clearVideoSelection global for onclick handler
window.clearVideoSelection = clearVideoSelection;
</script>
